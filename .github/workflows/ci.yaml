---
name: "Continuous integration to the container registry"

# yamllint disable-line truthy
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

jobs:
  build-integrate:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Run Super-Linter"
        uses: super-linter/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_DOCKERFILE: true  # Make sure this is enabled
          LINTER_RULES_PATH: ./
          DOCKERFILE_FILE_NAME: Containerfile
          DEFAULT_BRANCH: dev
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Read .arg file and export variables
        run: |
          while IFS='=' read -r key value; do
          echo "$key=$value" >> "$GITHUB_ENV"
          done < .arg

      - name: "Set up packages"
        # QEMU for aarch64 (using emulation)
        run: |
          sudo apt-get update
          sudo apt-get install --yes \
            qemu-user-static \
            binfmt-support podman
          sudo update-binfmts --enable qemu-aarch64

      - name: "Repository registry login"
        run: |
          echo "${{ secrets.DOCKERIO_TOKEN }}" | /usr/bin/podman login \
            --username "${{ secrets.DOCKERIO_REGISTRY }}" \
            --password-stdin docker.io

      - name: "Build Container Image for amd64 using Podman"
        # There must be a line at the end of the .env file
        run: | 
          /usr/bin/podman build \
           --arch aarch64 \
           --build-arg-file .arg \
           --file Containerfile \
           --no-cache \
           --tag "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_DEV }}-aarch64" \
           . 
          /usr/bin/podman build \
           --arch amd64 \
           --build-arg-file .arg \
           --file Containerfile \
           --no-cache \
           --tag "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_DEV }}-amd64" \
           .
          /usr/bin/podman images

      - name: "Push `dev` image to registry"
        run: |
          P_IMG="docker.io/${{ secrets.DOCKERIO_REGISTRY }}"
          S_IMG="${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_DEV }}-amd64"
          IMG="$P_IMG/$S_IMG"
          /usr/bin/podman tag "$S_IMG" "$IMG"
          /usr/bin/podman push "$IMG"
          S_IMG="${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_DEV }}-aarch64"
          IMG="$P_IMG/$S_IMG"
          /usr/bin/podman tag "$S_IMG" "$IMG"
          /usr/bin/podman push "$IMG"

      - name: "Create and Push Multi-Arch Manifest"
        run: |
          P_IMG="docker.io/${{ secrets.DOCKERIO_REGISTRY }}"
          IMG_NAME="${{ env.IMAGE_NAME }}"
          TAG="${{ env.IMAGE_TAG_DEV }}"
          # Create manifest list
          /usr/bin/podman manifest create "$IMG_NAME:$TAG"
          # Add individual architecture images to manifest
          /usr/bin/podman manifest add "$IMG_NAME:$TAG" "docker.io/$P_IMG/$IMG_NAME:$TAG-amd64"
          /usr/bin/podman manifest add "$IMG_NAME:$TAG" "docker.io/$P_IMG/$IMG_NAME:$TAG-aarch64"
          # Push the manifest list
          /usr/bin/podman manifest push "$IMG_NAME:$TAG" "docker://$P_IMG/$IMG_NAME:$TAG"

      - name: "Push `latest` & <IMAGE_VERSION> to registry"
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          S_IMG="${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_DEV }}"
          P_IMG="docker.io/${{ secrets.DOCKERIO_REGISTRY }}"
          IMG="$P_IMG/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}"
          /usr/bin/podman tag "$S_IMG" "$IMG"
          /usr/bin/podman push "$IMG"
          IMG="$P_IMG/${{ env.IMAGE_NAME }}"
          IMG="$IMG:${{ env.IMAGE_TAG_PROD }}"
          /usr/bin/podman tag "$S_IMG" "$IMG"
          /usr/bin/podman push "$IMG"
